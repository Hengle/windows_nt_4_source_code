/*** 
*dualtst.h
*
*  Copyright (C) 1994, Microsoft Corporation.  All Rights Reserved.
*  Information Contained Herein Is Proprietary and Confidential.
*
*Purpose:
*  Definition of the IDualTst interface.
*
*Revision History:
*
* [00]	27-Jun-94 bradlo: Created.
*
*Implementation Notes:
*   Ideally, this would be generated by MkTypLib, but I don't have time
*   to monkey around with the build, so just hard code it for now.
*
*****************************************************************************/

interface IDualTst : public IDispatch
{
    virtual HRESULT STDMETHODCALLTYPE get_ui1(unsigned char FAR* pui1) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_ui1(unsigned char ui1) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_i2(short FAR* pi2) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_i2(short i2) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_i4(long FAR* pi4) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_i4(long i4) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_r4(float FAR* pr4) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_r4(float r4) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_r8(double FAR* pr8) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_r8(double r8) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_cy(CY FAR* pcy) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_cy(CY cy) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_date(DATE FAR* pdate) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_date(DATE date) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_bstr(BSTR FAR* pbstr) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_bstr(BSTR bstr) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_disp(IDispatch FAR* FAR* ppdisp) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_disp(IDispatch FAR* pdisp) PURE;
    virtual HRESULT STDMETHODCALLTYPE putref_disp(IDispatch FAR* pdisp) PURE;

    virtual HRESULT STDMETHODCALLTYPE get_var(VARIANT FAR* pvar) PURE;
    virtual HRESULT STDMETHODCALLTYPE put_var(VARIANT var) PURE;
    virtual HRESULT STDMETHODCALLTYPE putref_var(VARIANT var) PURE;

    virtual HRESULT STDMETHODCALLTYPE m0(unsigned char ui1,
					   short i2,
					   long i4,
					   float r4,
					   double r8,
					   CY cy,
					   DATE date,
					   BSTR bstr,
					   IDispatch FAR* pdisp,
					   VARIANT var) PURE;

    virtual HRESULT STDMETHODCALLTYPE m1(unsigned char FAR* pui1,
					   short FAR* pi2,
					   long FAR* pi4,
					   float FAR* pr4,
					   double FAR* pr8,
					   CY FAR* pcy,
					   DATE FAR* pdate,
					   BSTR FAR* pbstr,
					   IDispatch FAR* FAR* ppdisp,
					   VARIANT FAR* pvar) PURE;

    virtual HRESULT STDMETHODCALLTYPE raise(long error,
					      BSTR bstrSource,
					      BSTR bstrDescription,
					      long dwHelpContest,
					      BSTR bstrHelpFile) PURE;
};
