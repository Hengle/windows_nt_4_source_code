
   o  What should we map to?
      The following needs to be supported in the CPL.

      1) Many to many:
         For output this would allow multiple applications
         to open the mapper and we would merge this midi data
         to ALL output midi devices.

         For input this would allow multiple applications
         to open the mapper and we would merge the midi
         data from ALL midi input devices and send it to 
         ALL the applications.

      2) Many to one:
         For output this would allow multiple applications to
         open the mapper and we would merge the data from the
         applications to a single midi device.

         For input this would allow multiple applications to 
         open the mapper and we would route the input from a
         single midi device to all applications.

      3) One to many:
         For output this would allow a single application to
         open the mapper and we would route the data received 
         from the application to all devcies.

         For input this would allow a single application to 
         open the mapper and we would merge the data received
         from all devices to this application.
   

      4) One to one:
         For output this would allow a single application to
         open the mapper and we would map the data to a single
         midi device.

         For input this would allow a single application to 
         open the mapper and we would map the data from a
         single midi device to this application.

   o  Do i autodoc the sample code? including the midimapper?

   o  We need to do something about error codes.....
      For any error conditions that need expalanation we
      should Log the error.

   o  How should i process the other MXDM_* messages?
         -  MODM_RESET
         -  MODM_POLYMSG

         -  MIDM_POLYMSG







Files
=====

modmsg.c    -  modMessage()
modm.c      -  modmXXXX messages
mapout.c    -  output mapping code and output code that needs to be fixed.
midmsg.c    -  midMessage()
midm.c      -  midmXXXX messages
mapin.c     -  input mapping code and input code that needs to be fixed.

debug.c     -  contains isr debug code
commonf.c   -  contains common code that needs to be fixed.
init.c      -  contains one time initialization code
config.c    -  contains configuration code.
drvproc.c   -  contains the DriverProc() and LibMain()
fix.c       -  stupid segment that is marked FIXED in def file.
               it contains the midi callback function.


