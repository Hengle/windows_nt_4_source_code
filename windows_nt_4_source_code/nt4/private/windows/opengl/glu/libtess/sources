
# Compilation flags:
#
# -DNDEBUG is for the production code; it removes all assertion checks
#    (note that <assert.h> looks at this symbol).
#
# -DNO_MALLOPT uses regular malloc instead of the mallopt() version.
#   ***** Unless you use this flag, you must use "-lmalloc" to link
#   ***** your application!
#
# -DMEMORY_DEBUG turns on the M_DEBUG option of mallopt; this can
#    increase the running time a LOT.
#
# -DGLU_TESS_API_FLOAT compiles a single-precision version of the library.
#
# -float prevents automatic promotion to double precision; this will produce
#    faster code when compiled with -DGLU_TESS_API_FLOAT.
#
# -DNO_BRANCH_CONDITIONS uses & and | instead of && and || on a couple
#    of heavily-used tests (VertEq and VertLeq); some compilers can generate
#    better code with these (use special instructions to avoid branching).
#
# -DDEBUG is *only* for use with the test program called "trite".  It uses
#    some variables which are defined by the test program, so you won't
#    be able to link it with anything else.
#

MAJORCOMP=opengl
MINORCOMP=libtess

TARGETNAME=libtess
TARGETPATH=.\obj
TARGETLIBS=

TARGETTYPE=LIBRARY

INCLUDES=..\inc;..\..\inc

C_DEFINES=-DNT -D__STDC__ -DNDEBUG -DNO_MALLOPT -DGLU32 -DGLU_V12

# There are several build options which are controlled by compiling
# different source files.
# The choices are:
#
#   - memory model:
#       
# 	  mem-simp.c:
#		Uses regular malloc() and free() for memory allocation.
#       (useful for debugging)
#	  memalloc.c:
#		Uses a much faster block-based allocator.
#
#     -> When using either of these memory models, the corresponding
#        header file must be copied to memalloc.h.  e.g. for mem-fast.c,
#        copy mem-fast.h to memalloc.h
#
# Currently there is only one implementation for the following modules,
# but the API was designed with multiple choices in mind:
#
#	- dictionary:
#
#		A dynamic dictionary based on doubly-linked lists.
#
#   - normals:
#
#		Approximates the normal from 3 widely separated vertices.
#
# Default choices for the above models are:

MEMALLOC    =   mem-simp

SOURCES=geom.c          \
        errorstr.c      \
        mesh.c          \
        render.c        \
        sweep.c         \
        tess.c          \
        tessmono.c      \
        dict.c          \
        priority.c      \
        normal.c        \
        $(MEMALLOC).c
