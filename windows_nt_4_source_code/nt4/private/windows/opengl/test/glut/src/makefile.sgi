#! smake

include $(ROOT)/usr/include/make/commondefs

OPTIMIZER = -g

TARGETS = libglut.a

LN = ln -s
MV = mv
RM = -rm -rf

HDRS = glutint.h glutos.h glutbitmp.h glutstrke.h layrutil.h
SRCS = gltinit.c gltutil.c gltwin.c gltmenu.c gltevent.c \
	gltshape.c glttpot.c gltstrke.c gltget.c \
	gltcindx.c layrutil.c gltwmisc.c gltbitmp.c \
        gltdials.c gltext.c gltspace.c glttablt.c \
        xgltget.c xgltinpt.c xgltmenu.c xgltos.c xgltpal.c
SRCSSEMIGENS = glt9x15.c glttr10.c glttr24.c glt8x13.c
SRCGENS = gltromn.c gltmromn.c
OBJS = $(SRCS:.c=.o) $(SRCSSEMIGENS:.c=.o) $(SRCGENS:.c=.o)
OTHERGENS = y.tab.c y.tab.h strkegen.c strkegen.h strkelex.c
OTHERSRCS = strkegen.y strkelex.l stroke.h
FONTS = Roman.stk MRomn.stk

LCOPTS = -I.. -fullwarn -wlint,-f -woff 813,852,827,826
LDIRT = *~ $(SRCGENS) $(OTHERGENS) strkegen *.bak hardcopy glutsrc.ps capxfont

default: $(TARGETS)

libglut.a : $(OBJS)
	$(RM) $@
	$(AR) crl $@ $(OBJS)

$(SRCS) $(OTHERSRCS) $(HDRS) $(FONTS) :
	co $@

includes headers : $(HDRS)
	$(RM) ../GL/glut.h
	$(LN) ../lib/glut.h ../GL/glut.h
	$(RM) ../GL/glutint.h
	$(LN) ../lib/glutint.h ../GL/glutint.h
	$(RM) ../GL/glutos.h
	$(LN) ../lib/glutos.h ../GL/glutos.h

.ORDER : strkegen.h strkegen.c

strkegen.h strkegen.c : strkegen.y
	$(YACC) -d strkegen.y
	$(MV) y.tab.c strkegen.c
	$(MV) y.tab.h strkegen.h

# avoid warnings when compiling lex generated code
strkegen.o : strkegen.c
	$(CC) -g -c -MDupdate Makedepend strkegen.c

strkelex.c : strkelex.l
	$(LEX) strkelex.l
	$(MV) lex.yy.c strkelex.c

# avoid warnings when compiling lex generated code
strkelex.o : strkelex.c
	$(CC) -c -MDupdate Makedepend strkelex.c

strkegen : strkegen.o strkelex.o
	$(CC) -o $@ $(CFLAGS) strkegen.o strkelex.o -ll

capxfont : capxfont.o
	$(CC) -o $@ $(CFLAGS) capxfont.o -lX11

gltromn.c : Roman.stk strkegen
	./strkegen -s glutStrokeRoman < Roman.stk > $@

gltmromn.c : MRomn.stk strkegen
	./strkegen -s glutStrokeMonoRoman < MRomn.stk > $@

glutsrc.ps : $(SRCS)
	$(RM) hardcopy
	mkdir -p hardcopy
	for i in $(SRCS) ;\
	do \
	  grep -v CENTRY $$i | grep -v INDENT- > hardcopy/$$i; \
	done
	cd hardcopy ; enscript -p ../$@ -G -2r `echo $(SRCS) | fmt -1 | sort`
	$(RM) hardcopy

# The bitmap files can be generated using capturexfont, but because
# they require a connection to an X server and potentially different
# X servers have different fonts, these generated files are part
# of the GLUT distribution.

9_BY_15 = -misc-fixed-medium-r-normal--15-140-75-75-C-90-iso8859-1
8_BY_13 = -misc-fixed-medium-r-normal--13-120-75-75-C-80-iso8859-1
TR10 = -adobe-times-medium-r-normal--10-100-75-75-p-54-iso8859-1
TR24 = -adobe-times-medium-r-normal--24-240-75-75-p-124-iso8859-1

semigens : capturexfont
	./capturexfont $(9_BY_15) glutBitmap9By15 > glut_9x15.c.gen
	./capturexfont $(8_BY_13) glutBitmap8By13 > glut_8x13.c.gen
	./capturexfont $(TR10) glutBitmapTimesRoman10 > glut_tr10.c.gen
	./capturexfont $(TR24) glutBitmapTimesRoman24 > glut_tr24.c.gen

# unused test rule for test building 16-bit font
JIS = -jis-fixed-medium-r-normal--24-230-75-75-c-240-jisx0208.1983-0
glut_jis.c : 
	./capturexfont $(JIS) glutBitmapJis > $@

./glut.h : glut.h
./gltint.h : gltint.h
./gltos.h : gltos.h
./gltbitmp.h : gltbitmp.h
./gltstrke.h : gltstrke.h
./strkegen.h : strkegen.h
./stroke.h : stroke.h
./layrutil.h : layrutil.h

include $(COMMONRULES)
