!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
CPUDIR = intel
!elseif "$(PROCESSOR_ARCHITECTURE)"=="ALPHA"
CPUDIR = alpha
!elseif "$(PROCESSOR_ARCHITECTURE)"=="MIPS"
CPUDIR = mips
!elseif "$(PROCESSOR_ARCHITECTURE)"=="PPC"
CPUDIR = ppc
!elseif "$(PROCESSOR_ARCHITECTURE)"=="PMAC"
CPUDIR = mppc
!else
!error objects.mkf: unknown host CPU
!endif


D=\msdev\crt\src
E=$D\$(CPUDIR)
S=\msdev\crt\prebuild
T=$S\build\$(CPUDIR)


FILES_CPU_ALL = \
	$E\*\conv.lib			\
	$E\*\tran.lib			\
	$E\*\ehvecctr.obj		\
	$E\*\ehveccvb.obj		\
	$E\*\ehvecdtr.obj		\
	$E\*\frame.obj			\
	$E\*\hooks.obj			\
	$E\*\rtti.obj			\
	$E\*\setjmp.obj 		\
	$E\*\stdexcpt.obj		\
	$E\*\throw.obj			\
	$E\*\trnsctrl.obj		\
	$E\*\typinfo.obj		\
	$E\*\typname.obj		\
	$E\*\user.obj			\
!if "$(PROCESSOR_ARCHITECTURE)"!="PMAC"
	$E\*\unhandld.obj		\
	$E\*\validate.obj		\
!endif
	$E\*\undname.obj

!if "$(PROCESSOR_ARCHITECTURE)"=="ALPHA"

FILES_CPU = \
	$(FILES_CPU_ALL)		\
	$E\*\bridge.obj 		\
	$E\*\chandler.obj		\
	$E\*\chkstk.obj 		\
	$E\*\divdat.obj 		\
	$E\*\divide2.obj		\
	$E\*\extv.obj			\
	$E\*\extvvol.obj		\
	$E\*\extzv.obj			\
	$E\*\extzvvol.obj		\
	$E\*\insv.obj			\
	$E\*\insvvol.obj		\
	$E\*\jmpuwind.obj		\
	$E\*\longjmp.obj		\
	$E\*\matherr.obj		\
	$E\*\otsdiv.obj 		\
	$E\*\otsjmp.obj 		\
	$E\*\otsjmpex.obj		\
	$E\*\otsuwind.obj		\
	$E\*\scmpeql.obj		\
	$E\*\scmpeqlp.obj		\
	$E\*\scmpleq.obj		\
	$E\*\scmpleqp.obj		\
	$E\*\scmplss.obj		\
	$E\*\scmplssp.obj		\
	$E\*\setjmpex.obj		\
	$E\*\sfill.obj			\
	$E\*\sloc.obj			\
	$E\*\smove.obj			\
	$E\*\smovem.obj 		\
	$E\*\strans.obj 		\
	$E\*\strcmp_.obj		\
	$E\*\strcmps.obj		\
	$E\*\strcpy_.obj		\
	$E\*\strcpys.obj		\
	$E\*\strlen_.obj		\
	$E\*\strlens.obj		\
	$E\*\szero.obj			\
	$E\*\tlssup.obj 		\
	$E\*\xcptmisc.obj

!elseif "$(PROCESSOR_ARCHITECTURE)"=="MIPS"

FILES_CPU = \
	$(FILES_CPU_ALL)		\
	$E\*\chandler.obj		\
	$E\*\chkstk.obj 		\
	$E\*\ehstate.obj 		\
	$E\*\handlers.obj		\
	$E\*\jmpuwind.obj		\
	$E\*\llabsdiv.obj		\
	$E\*\llbit.obj			\
	$E\*\llcvt.obj			\
	$E\*\lldiv.obj			\
	$E\*\lldivrem.obj		\
	$E\*\llmul.obj			\
	$E\*\llshift.obj		\
	$E\*\longjmp.obj		\
	$E\*\matherr.obj		\
	$E\*\memorym.obj		\
	$E\*\rtlmisc.obj		\
	$E\*\setjmpex.obj		\
	$E\*\strcatm.obj		\
	$E\*\strchrm.obj		\
	$E\*\strcmpm.obj		\
	$E\*\strcpym.obj		\
	$E\*\strlenm.obj		\
	$E\*\strrchrm.obj		\
	$E\*\tlssup.obj

!elseif "$(PROCESSOR_ARCHITECTURE)"=="PPC"

FILES_CPU = \
	$(FILES_CPU_ALL)		\
	$E\*\chandler.obj		\
	$E\*\chkstk.obj 		\
	$E\*\dtoi.obj			\
	$E\*\dtoi64.obj 		\
	$E\*\dtou.obj			\
	$E\*\dtou64.obj 		\
	$E\*\ehstate.obj 		\
	$E\*\exsup.obj			\
	$E\*\handlers.obj		\
	$E\*\i64div.obj 		\
	$E\*\i64rem.obj 		\
	$E\*\i64tod.obj 		\
	$E\*\itod.obj			\
	$E\*\itof.obj			\
	$E\*\jmpuwind.obj		\
	$E\*\longjmp.obj		\
	$E\*\matherr.obj		\
	$E\*\memccpyp.obj		\
	$E\*\memchrp.obj		\
	$E\*\memcmpp.obj		\
	$E\*\memcpyp.obj		\
	$E\*\memsetp.obj		\
	$E\*\restfpr.obj		\
	$E\*\restgpr.obj		\
	$E\*\savefpr.obj		\
	$E\*\savegpr.obj		\
	$E\*\setjmpex.obj		\
	$E\*\strcatp.obj		\
	$E\*\strchrp.obj		\
	$E\*\strcmpp.obj		\
	$E\*\stricmpp.obj		\
	$E\*\strlenp.obj		\
	$E\*\strrchrp.obj		\
	$E\*\tlssup.obj			\
	$E\*\u64div.obj 		\
	$E\*\u64rem.obj 		\
	$E\*\u64tod.obj 		\
	$E\*\unwind.obj 		\
	$E\*\utod.obj			\
	$E\*\utof.obj

!elseif "$(PROCESSOR_ARCHITECTURE)"=="x86"

FILES_CPU = \
	$(FILES_CPU_ALL)		\
	$E\*\atlssup.obj		\
	$E\*\ehprolog.obj		\
	$E\*\exsup.obj			\
	$E\*\exsup2.obj 		\
	$E\*\exsup3.obj 		\
	$E\*\longjmp.obj		\
	$E\*\lowhelpr.obj		\
	$E\*\matherr.obj		\
	$E\*\sehsupp.obj		\
	$E\*\setjmp3.obj		\
	$E\*\setjmpex.obj		\
	$E\*\tlssup.obj

!elseif "$(PROCESSOR_ARCHITECTURE)"=="PMAC"

FILES_CPU = \
	$(FILES_CPU_ALL)		\
	$E\*\chkstk.obj 		\
	$E\*\ehstate.obj		\
	$E\*\lowhelpr.obj		\
	$E\*\trnsctrl.obj

!endif


FILES_LIBCST	= $(FILES_CPU:*=*st_lib)

!if "$(PROCESSOR_ARCHITECTURE)"!="PMAC"
FILES_LIBCMT	= $(FILES_CPU:*=*mt_lib)
!endif

FILES_DLL	= $(FILES_CPU:*=*dll_lib)

!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
FILES_DLS	= $(FILES_CPU:*=*dls_lib)
!endif


FILES_ALL = \
	$E\tcmap.lib


FILES_DLL_ALL = \
!if "$(PROCESSOR_ARCHITECTURE)"!="PMAC"
	$E\sdknames.lib 		\
!endif
	$E\tcmapdll.lib


FILES_DLL_RELEASE = \
	$(FILES_DLL_ALL)		\
	$E\msvcrt40.def 		\
!if "$(PROCESSOR_ARCHITECTURE)"=="PMAC"
	$E\msvcrt40.r			\
!endif
!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
	$E\win32s\msvcrt40.def
!endif


FILES_DLL_DEBUG = \
	$(FILES_DLL_ALL)		\
	$E\msvcr40d.def 		\
!if "$(PROCESSOR_ARCHITECTURE)"=="PMAC"
	$E\msvcrt40.r			\
!endif
!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
	$E\win32s\msvcr40d.def
!endif


DIRS_ALL = \
	$E				\
!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
	$E\win32s
!endif


DIRS_LIBCST	= $E\*st_lib

!if "$(PROCESSOR_ARCHITECTURE)"!="PMAC"
DIRS_LIBCMT	= $E\*mt_lib
!endif

DIRS_DLL	= $E\*dll_lib

!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
DIRS_DLS	= $E\*dls_lib
!endif

DIRS = $(DIRS_LIBCST) $(DIRS_LIBCMT) $(DIRS_DLL) $(DIRS_DLS)



.SUFFIXES:
.SUFFIXES: .lib .obj

{$T\st_obj}.obj{$E\st_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E\st_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.obj{$E\xst_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E\xst_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zst_obj}.obj{$E\zst_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zst_obj}.lib{$E\zst_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.obj{$E\mt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.lib{$E\mt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.obj{$E\xmt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.lib{$E\xmt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zmt_obj}.obj{$E\zmt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zmt_obj}.lib{$E\zmt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.obj{$E\dll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E\dll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdll_obj}.obj{$E\zdll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdll_obj}.lib{$E\zdll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.obj{$E\xdll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E\xdll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

!if "$(PROCESSOR_ARCHITECTURE)"=="x86"

{$T\dls_obj}.obj{$E\dls_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dls_obj}.lib{$E\dls_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dls_obj}.obj{$E\xdls_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dls_obj}.lib{$E\xdls_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdls_obj}.obj{$E\zdls_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdls_obj}.lib{$E\zdls_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

!endif


all: release debug

release: st mt dll dls

debug: xst xmt xdll xdls

lego: zst zmt zdll

st: $(DIRS_ALL) $(DIRS_LIBCST:*=) $(FILES_ALL) $(FILES_LIBCST:*=)

mt: $(DIRS_ALL) $(DIRS_LIBCMT:*=) $(FILES_ALL) $(FILES_LIBCMT:*=)

dll: $(DIRS_ALL) $(DIRS_DLL:*=) $(FILES_ALL) $(FILES_DLL:*=) $(FILES_DLL_RELEASE)

dls: $(DIRS_ALL) $(DIRS_DLS:*=) $(FILES_ALL) $(FILES_DLS:*=) $(FILES_DLL_RELEASE)

xst: $(DIRS_ALL) $(DIRS_LIBCST:*=x) $(FILES_ALL) $(FILES_LIBCST:*=x)

xmt: $(DIRS_ALL) $(DIRS_LIBCMT:*=x) $(FILES_ALL) $(FILES_LIBCMT:*=x)

xdll: $(DIRS_ALL) $(DIRS_DLL:*=x) $(FILES_ALL) $(FILES_DLL:*=x) $(FILES_DLL_DEBUG)

xdls: $(DIRS_ALL) $(DIRS_DLS:*=x) $(FILES_ALL) $(FILES_DLS:*=x) $(FILES_DLL_DEBUG)

zst: $(DIRS_ALL) $(DIRS_LIBCST:*=z) $(FILES_ALL) $(FILES_LIBCST:*=z)

zmt: $(DIRS_ALL) $(DIRS_LIBCMT:*=z) $(FILES_ALL) $(FILES_LIBCMT:*=z)

zdll: $(DIRS_ALL) $(DIRS_DLL:*=z) $(FILES_ALL) $(FILES_DLL:*=z) $(FILES_DLL_RELEASE)


$(DIRS_ALL) $(DIRS:*=) $(DIRS:*=x) $(DIRS:*=z):
	@if not exist $@\NUL mkdire $@


!if "$(PROCESSOR_ARCHITECTURE)"=="x86"

$E\msvcr40d.def: $S\libw32\lib\i386\msvcr40d.def
	@echo Copying $** to $@
	@copy $** $@

$E\msvcrt40.def: $S\libw32\lib\i386\msvcrt40.def
	@echo Copying $** to $@
	@copy $** $@

$E\win32s\msvcrt40.def: $S\libw32\lib\i386\win32s\msvcrt40.def
	@echo Copying $** to $@
	@copy $** $@

$E\win32s\msvcr40d.def: $S\libw32\lib\i386\win32s\msvcr40d.def
	@echo Copying $** to $@
	@copy $** $@

!elseif "$(PROCESSOR_ARCHITECTURE)"=="PMAC"

$E\msvcr40d.def: $S\dllstuff\macdll\msvcr40d.def
	@echo Copying $** to $@
	@copy $** $@

$E\msvcrt40.def: $S\dllstuff\macdll\msvcrt40.def
	@echo Copying $** to $@
	@copy $** $@

$E\msvcrt40.r: $S\dllstuff\macdll\msvcrt40.r
	@echo Copying $** to $@
	@copy $** $@

!else

$E\msvcr40d.def: $S\libw32\lib\$(CPUDIR)\msvcr40d.def
	@echo Copying $** to $@
	@copy $** $@

$E\msvcrt40.def: $S\libw32\lib\$(CPUDIR)\msvcrt40.def
	@echo Copying $** to $@
	@copy $** $@

!endif
