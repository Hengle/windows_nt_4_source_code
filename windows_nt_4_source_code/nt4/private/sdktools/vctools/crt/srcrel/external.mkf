!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
CPUDIR = intel
!elseif "$(PROCESSOR_ARCHITECTURE)"=="ALPHA"
CPUDIR = alpha
!elseif "$(PROCESSOR_ARCHITECTURE)"=="MIPS"
CPUDIR = mips
!elseif "$(PROCESSOR_ARCHITECTURE)"=="PPC"
CPUDIR = ppc
!elseif "$(PROCESSOR_ARCHITECTURE)"=="PMAC"
CPUDIR = mppc
!else
!error objects.mkf: unknown host CPU
!endif


D=\msdev\crt\src
E=$D\$(CPUDIR)
S=\msdev\crt\src
T=$S\build\$(CPUDIR)


!if "$(PROCESSOR_ARCHITECTURE)"=="ALPHA"

FILES_CPU =

!elseif "$(PROCESSOR_ARCHITECTURE)"=="MIPS"

FILES_CPU =

!elseif "$(PROCESSOR_ARCHITECTURE)"=="PPC"

FILES_CPU =

!elseif "$(PROCESSOR_ARCHITECTURE)"=="x86"

FILES_CPU_DLL = \
	$E\*\dllsupp.obj

FILES_CPU = \
	$E\*\chkstk.obj			\
	$E\*\enable.obj			\
	$E\*\inp.obj			\
	$E\*\lldiv.obj			\
	$E\*\llmul.obj			\
	$E\*\llrem.obj			\
	$E\*\llshl.obj			\
	$E\*\llshr.obj			\
	$E\*\mbscat.obj			\
	$E\*\mbsdup.obj			\
	$E\*\memccpy.obj		\
	$E\*\memchr.obj			\
	$E\*\memcmp.obj			\
	$E\*\memcpy.obj			\
	$E\*\memicmp.obj		\
	$E\*\memmove.obj		\
	$E\*\memset.obj			\
	$E\*\outp.obj			\
	$E\*\strcat.obj			\
	$E\*\strchr.obj			\
	$E\*\strcmp.obj			\
	$E\*\strcspn.obj		\
	$E\*\strdup.obj			\
	$E\*\stricmp.obj		\
	$E\*\strlen.obj			\
	$E\*\strncat.obj		\
	$E\*\strncmp.obj		\
	$E\*\strncpy.obj		\
	$E\*\strnicmp.obj		\
	$E\*\strnset.obj		\
	$E\*\strpbrk.obj		\
	$E\*\strrchr.obj		\
	$E\*\strrev.obj			\
	$E\*\strset.obj			\
	$E\*\strspn.obj			\
	$E\*\strstr.obj			\
	$E\*\ulldiv.obj			\
	$E\*\ullrem.obj			\
	$E\*\ullshr.obj	

!elseif "$(PROCESSOR_ARCHITECTURE)"=="PMAC"

FILES_CPU =

!endif


FILES_LIBCST	= $(FILES_CPU:*=*st_lib)

!if "$(PROCESSOR_ARCHITECTURE)"!="PMAC"
FILES_LIBCMT	= $(FILES_CPU:*=*mt_lib)
!endif

FILES_DLL	= $(FILES_CPU:*=*dll_lib) $(FILES_CPU_DLL:*=*dll_lib)

!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
FILES_DLS	= $(FILES_CPU:*=*dls_lib) $(FILES_CPU_DLL:*=*dls_lib)
!endif


FILES_ALL = \
	$D\ext_mkf \
	$D\ext_mkf.inc \
	$D\ext_mkf.sub \
	$D\bldnt.cmd \
	$D\bldwin95.bat \
	$D\nmktobat.c

FILES_DLL_ALL = \
!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
	$D\_sample_.rc
!elseif "$(PROCESSOR_ARCHITECTURE)"=="PMAC"
	$D\_sample_.r
!endif

FILES_DLL_RELEASE = \
	$(FILES_DLL_ALL)		\
!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
	$E\win32s\_sample_.def 		\
!endif
	$E\_sample_.def


FILES_DLL_DEBUG = \
	$(FILES_DLL_ALL)		\
!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
	$E\win32s\_sampld_.def 		\
!endif
	$E\_sampld_.def


.SUFFIXES:
.SUFFIXES: .lib .obj

{$T\st_obj}.obj{$E\st_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E\st_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.obj{$E\xst_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E\xst_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zst_obj}.obj{$E\zst_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zst_obj}.lib{$E\zst_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.obj{$E\mt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.lib{$E\mt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.obj{$E\xmt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.lib{$E\xmt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zmt_obj}.obj{$E\zmt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zmt_obj}.lib{$E\zmt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.obj{$E\dll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E\dll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdll_obj}.obj{$E\zdll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdll_obj}.lib{$E\zdll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.obj{$E\xdll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E\xdll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

!if "$(PROCESSOR_ARCHITECTURE)"=="x86"

{$T\dls_obj}.obj{$E\dls_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dls_obj}.lib{$E\dls_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dls_obj}.obj{$E\xdls_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dls_obj}.lib{$E\xdls_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdls_obj}.obj{$E\zdls_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdls_obj}.lib{$E\zdls_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

!endif


all: release debug

release: st mt dll dls $(FILES_ALL)

debug: xst xmt xdll xdls $(FILES_ALL)

lego: zst zmt zdll $(FILES_ALL)

st: $(FILES_LIBCST:*=)

mt: $(FILES_LIBCMT:*=)

dll: $(FILES_DLL:*=) $(FILES_DLL_RELEASE)

dls: $(FILES_DLS:*=) $(FILES_DLL_RELEASE)

xst: $(FILES_LIBCST:*=x)

xmt: $(FILES_LIBCMT:*=x)

xdll: $(FILES_DLL:*=x) $(FILES_DLL_DEBUG)

xdls: $(FILES_DLS:*=x) $(FILES_DLL_DEBUG)

zst: $(FILES_LIBCST:*=z)

zmt: $(FILES_LIBCMT:*=z)

zdll: $(FILES_DLL:*=z) $(FILES_DLL_RELEASE)

$D\nmktobat.c: nmktobat.c
	@echo Copying $** to $@
	@copy $** $@

$D\bldnt.cmd: bldnt.cmd
	@echo Copying $** to $@
	@copy $** $@

$D\bldwin95.bat: bldwin95.bat
	@echo Copying $** to $@
	@copy $** $@

$D\ext_mkf: $D\makefile striplin.exe
	@echo Translating $D\makefile into $@
	@striplin < $D\makefile > $@

$D\ext_mkf.inc: $D\makefile.inc striplin.exe
	@echo Translating $D\makefile.inc into $@
	@striplin < $D\makefile.inc > $@

$D\ext_mkf.sub: $D\makefile.sub striplin.exe
	@echo Translating $D\makefile.sub into $@
	@striplin < $D\makefile.sub > $@

$D\_sample_.rc: _sample_.rc
	@echo Copying $** to $@
	@copy $** $@

$D\_sample_.r: _sample_.r
	@echo Copying $** to $@
	@copy $** $@

$E\_sample_.def: $E\msvcrt40.def striplin.exe
	@echo Translating $E\msvcrt40.def into $@
	@striplin < $E\msvcrt40.def | sed "s/MSVCRT40/_SAMPLE_/" > $@

$E\_sampld_.def: $E\msvcr40d.def striplin.exe
	@echo Translating $E\msvcr40d.def into $@
	@striplin < $E\msvcr40d.def | sed "s/MSVCR40D/_SAMPLD_/" > $@

!if "$(PROCESSOR_ARCHITECTURE)"=="x86"

$E\win32s\_sample_.def: $E\win32s\msvcrt40.def striplin.exe
	@echo Translating $E\win32s\msvcrt40.def into $@
	@striplin < $E\win32s\msvcrt40.def | sed "s/MSVCRT40/_SAMPLE_/" > $@

$E\win32s\_sampld_.def: $E\win32s\msvcr40d.def striplin.exe
	@echo Translating $E\win32s\msvcr40d.def into $@
	@striplin < $E\win32s\msvcr40d.def | sed "s/MSVCR40D/_SAMPLD_/" > $@

!elseif "$(PROCESSOR_ARCHITECTURE)"=="PMAC"

!else

!endif

striplin.exe: striplin.c
	$(V4TOOLS)\bin\cl -nologo -Gi- -W3 -WX -Za -X -I$(V4TOOLS)\include $*.c -link -nod:libc.lib -nod:kernel32.lib $(V4TOOLS)\lib\libc.lib $(V4TOOLS)\lib\kernel32.lib
